openapi: 3.0.3
info:
  title: TEAM
  version: "1.0"
  description: API документация для проекта
servers:
  - url: http://195.133.201.153:8000
paths:
  /login/:
    post:
      summary: User login
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
      responses:
        '200':
          description: Logged in successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  username:
                    type: string
                  name:
                    type: string
                  last_name:
                    type: string
                  email:
                    type: string
        '400':
          description: Invalid username or password
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
    get:
      summary: Get CSRF token
      responses:
        '200':
          description: CSRF token
          content:
            application/json:
              schema:
                type: object
                properties:
                  csrf_token:
                    type: string
  /upload/:
    post:
      summary: Handle model inference
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                img:
                  type: string
                  format: binary
              required:
                - img
      responses:
        '200':
          description: Inference result
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      type: number
        '400':
          description: No image uploaded
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
  /logout/:
    get:
      summary: User logout
      responses:
        '302':
          description: Redirect to login page
          headers:
            Location:
              schema:
                type: string
  /get_modified/:
    get:
      summary: Get modified data within date range
      security:
        - cookieAuth: []
      parameters:
        - name: start_date
          in: query
          required: true
          schema:
            type: string
            format: date
        - name: end_date
          in: query
          required: true
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Modified data
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
        '400':
          description: start_date and end_date parameters are required
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /get_aggregate/:
    get:
      summary: Get aggregate data within date range
      security:
        - cookieAuth: []
      parameters:
        - name: start_date
          in: query
          required: true
          schema:
            type: string
            format: date
        - name: end_date
          in: query
          required: true
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Aggregate data
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
        '400':
          description: start_date and end_date parameters are required
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid